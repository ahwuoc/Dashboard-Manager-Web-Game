generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id               Int       @id @default(autoincrement())
  username         String    @unique(map: "username") @db.VarChar(20)
  password         String    @db.VarChar(100)
  create_time      DateTime? @default(now()) @db.Timestamp(0)
  update_time      DateTime? @default(now()) @db.Timestamp(0)
  ban              Int       @default(0) @db.SmallInt
  bao_tri          Int       @default(0)
  point_post       Int       @default(0)
  last_post        Int       @default(0)
  role             Int       @default(-1)
  is_admin         Boolean   @default(false)
  last_time_login  DateTime  @default(dbgenerated("('2002-05-07 14:00:00')")) @db.Timestamp(0)
  last_time_logout DateTime  @default(dbgenerated("('2002-05-07 14:00:00')")) @db.Timestamp(0)
  last_time_off    DateTime  @default(now()) @db.Timestamp(0)
  date_created     DateTime  @default(now()) @db.DateTime(0)
  ip_address       String?   @db.VarChar(50)
  gmail            String?   @db.VarChar(255)
  active           Int       @default(1)
  xac_nhan         Int       @default(0)
  thoi_vang        Int       @default(0)
  tichdiem         Int       @default(0)
  server_login     Int       @default(-1)
  bd_player        Float?    @default(1)
  is_gift_box      Boolean?  @default(false)
  gift_time        String?   @default("0") @db.VarChar(255)
  reward           String?   @db.LongText
  tongnap          Int       @default(0)
  coin             Int       @default(0)
  vnd              Int?      @default(0)
  vnd_reward       Int       @default(0)
  admin_key        Int       @default(0)
  gioithieu        Int       @default(0)
  luotquay         Int       @default(0)
  mkc2             Int       @default(0)
  player           player?
}

model achievement_template {
  id        Int    @id @default(autoincrement())
  info1     String @db.Text
  info2     String @db.Text
  money     Int
  max_count BigInt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model adminpanel {
  domain    String? @db.Text
  logo      String? @db.Text
  trangthai String  @db.Text
  android   String? @db.Text
  iphone    String? @db.Text
  windows   String? @db.Text
  java      String? @db.Text

  @@ignore
}

model array_head_2_frames {
  id   Int    @id
  data String @db.Text
}

model bg_item_template {
  id       Int @id
  image_id Int
  layer    Int
  dx       Int
  dy       Int
}

model caption {
  id   Int    @id @default(autoincrement())
  NAME String @db.VarChar(255)
}

model clan_sv1 {
  id          Int      @id
  NAME        String   @db.VarChar(255)
  slogan      String   @default("") @db.VarChar(255)
  img_id      Int      @default(0)
  power_point BigInt   @default(0)
  max_member  Int      @default(10) @db.SmallInt
  clan_point  Int      @default(0)
  LEVEL       Int      @default(1)
  members     String   @db.Text
  create_time DateTime @default(now()) @db.Timestamp(0)
}

model clan_sv2 {
  id          Int      @id
  NAME        String   @db.VarChar(255)
  slogan      String   @default("") @db.VarChar(255)
  img_id      Int      @default(0)
  power_point BigInt   @default(0)
  max_member  Int      @default(10) @db.SmallInt
  clan_point  Int      @default(0)
  LEVEL       Int      @default(1)
  members     String   @db.Text
  create_time DateTime @default(now()) @db.Timestamp(0)
}

model comment {
  comment_id    BigInt        @id @default(autoincrement())
  question_id   BigInt
  content       String?       @db.Text
  created       DateTime      @default(now()) @db.Timestamp(0)
  post_question post_question @relation(fields: [question_id], references: [question_id], onUpdate: Restrict, map: "comment_ibfk_1")

  @@index([question_id], map: "question_id")
}

model cpanel {
  id         Int      @id @default(autoincrement())
  token      String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(0)
}

model dhvt_template {
  id        Int    @id @default(autoincrement())
  cup       String @default("0") @db.VarChar(999)
  time      String @default("0") @db.VarChar(999)
  gem       Int    @default(0)
  gold      Int    @default(0)
  min_start Int    @default(0)
  min_limit Int    @default(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model event {
  server Int  @default(0)
  noel   Int?

  @@ignore
}

model flag_bag {
  id        Int    @id
  icon_data String @db.VarChar(255)
  NAME      String @default("flag_bag") @db.VarChar(255)
  gold      Int    @default(-1)
  gem       Int    @default(-1)
  icon_id   Int    @default(0)
}

model giftcode {
  id         Int      @id @default(autoincrement())
  code       String   @db.VarChar(255)
  count_left Int
  detail     String   @db.Text
  datecreate DateTime @default(now()) @db.Timestamp(0)
  expired    DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @db.Timestamp(0)
  itemoption String   @db.Text
}

model head_avatar {
  head_id   Int @id
  avatar_id Int
}

model history_event {
  id      Int       @id @default(autoincrement())
  name    String?   @db.VarChar(255)
  point   Int?      @default(0)
  created DateTime? @default(now()) @db.Date
}

model history_giftcode {
  stt         Int      @id @default(autoincrement())
  id_player   Int
  name        String   @db.VarChar(20)
  id_giftcode Int
  entry_time  DateTime @default(now()) @db.DateTime(0)
}

model history_gold {
  id   Int     @id @default(autoincrement())
  name String? @db.VarChar(255)
  gold Int?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model history_receive_goldbar {
  player_id           Int
  player_name         String   @db.VarChar(255)
  gold_before_receive Int
  gold_after_receive  Int
  gold_bag_before     Int
  gold_bag_after      Int
  gold_box_before     Int
  gold_box_after      Int
  time_receive        DateTime @default(now()) @db.DateTime(0)

  @@index([player_id], map: "player_id")
  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model history_transaction {
  player_1          String   @db.VarChar(255)
  player_2          String   @db.VarChar(255)
  item_player_1     String   @db.Text
  item_player_2     String   @db.Text
  bag_1_before_tran String   @db.Text
  bag_2_before_tran String   @db.Text
  bag_1_after_tran  String   @db.Text
  bag_2_after_tran  String   @db.Text
  time_tran         DateTime @default(now()) @db.Timestamp(0)

  @@ignore
}

model img_by_name {
  id      Int    @id @default(autoincrement())
  NAME    String @unique(map: "NAME") @db.VarChar(55)
  n_frame Int
}

model intrinsic {
  id           Int    @id
  NAME         String @db.VarChar(255)
  param_from_1 Int    @default(0)
  param_to_1   Int    @default(0)
  param_from_2 Int    @default(0)
  param_to_2   Int    @default(0)
  icon         Int    @default(0)
  gender       Int    @default(3) @db.SmallInt
}

model item_option_template {
  id               Int                @id
  NAME             String             @db.VarChar(255)
  item_shop_option item_shop_option[] @ignore
}

model item_shop {
  id               Int                @id @default(autoincrement())
  tab_id           Int
  temp_id          Int
  is_new           Boolean            @default(true)
  is_sell          Boolean            @default(true)
  type_sell        Int?               @default(1)
  cost             Int?               @default(0)
  icon_spec        Int?               @default(0)
  create_time      DateTime?          @default(now()) @db.Timestamp(0)
  item_shop_option item_shop_option[] @ignore

  @@index([tab_id], map: "tab_id")
  @@index([temp_id], map: "temp_id")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model item_shop_option {
  item_shop_id         Int
  option_id            Int
  param                Int
  item_shop            item_shop            @relation(fields: [item_shop_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "item_shop_option_ibfk_1")
  item_option_template item_option_template @relation(fields: [option_id], references: [id], onUpdate: Restrict, map: "item_shop_option_ibfk_2")

  @@index([item_shop_id], map: "item_shop_id")
  @@index([option_id], map: "option_id")
  @@ignore
}

model item_template {
  id            Int     @id
  TYPE          Int
  gender        Int     @db.SmallInt
  NAME          String  @db.VarChar(255)
  description   String  @db.VarChar(255)
  icon_id       Int
  part          Int
  is_up_to_up   Boolean
  power_require Int
  gold          Int     @default(0)
  gem           Int     @default(0)
  head          Int     @default(-1)
  body          Int     @default(-1)
  leg           Int     @default(-1)
}

model map_template {
  id         Int    @id
  NAME       String @db.VarChar(55)
  zones      Int    @default(1)
  max_player Int    @default(15)
  data       String @default("[]") @db.VarChar(1000)
  type       Int    @default(1)
  planet_id  Int    @default(1)
  bg_type    Int    @default(1)
  tile_id    Int    @default(1)
  bg_id      Int    @default(1)
  waypoints  String @db.Text
  mobs       String @db.Text
  npcs       String @db.Text
}

model mob_template {
  id                Int    @id
  TYPE              Int
  NAME              String @db.VarChar(50)
  hp                Int
  range_move        Int    @db.SmallInt
  speed             Int    @db.SmallInt
  dart_type         Int    @db.SmallInt
  percent_dame      Int    @default(5) @db.SmallInt
  percent_tiem_nang Int    @default(50) @db.SmallInt
}

model naptien {
  id          Int     @id @default(autoincrement())
  uid         String? @db.Text
  sotien      String? @db.Text
  seri        String? @db.Text
  code        String? @db.Text
  loaithe     String? @db.Text
  time        String? @db.Text
  noidung     String? @db.Text
  tinhtrang   String? @db.Text
  tranid      String? @db.Text
  magioithieu String  @db.Text
}

model nclass {
  id   Int    @id
  NAME String @db.VarChar(50)
}

model npc_template {
  id     Int    @id
  NAME   String @db.VarChar(50)
  head   Int
  body   Int
  leg    Int
  avatar Int?   @default(0)
  shop   shop[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model part {
  id   Int
  TYPE Int
  DATA String @db.Text

  @@ignore
}

model player {
  id                      Int      @id @default(autoincrement())
  account_id              Int?     @unique(map: "account_id")
  name                    String   @db.VarChar(20)
  head                    Int      @default(102)
  gender                  Int
  have_tennis_space_ship  Boolean? @default(false)
  clan_id_sv1             Int      @default(-1)
  clan_id_sv2             Int      @default(-1)
  data_inventory          String   @db.Text
  data_location           String   @db.Text
  data_point              String   @db.Text
  data_magic_tree         String   @db.Text
  items_body              String   @db.Text
  items_bag               String   @db.Text
  items_box               String   @db.Text
  items_box_lucky_round   String   @db.Text
  friends                 String   @db.Text
  enemies                 String   @db.Text
  data_offtrain           String   @default("[0,0]") @db.LongText
  data_intrinsic          String   @db.Text
  data_item_time          String   @db.Text
  data_task               String   @db.Text
  data_mabu_egg           String   @db.Text
  data_charm              String   @db.Text
  skills                  String   @db.Text
  skills_shortcut         String   @db.Text
  pet                     String   @db.Text
  data_black_ball         String   @db.Text
  data_side_task          String   @db.Text
  create_time             DateTime @default(now()) @db.Timestamp(0)
  diem_danh               BigInt   @default(0)
  diem_danh2              BigInt   @default(0)
  soi_boss                BigInt   @default(0)
  pointPvp                Int?     @default(0)
  gold_vo_dai             BigInt   @default(0)
  gold_dai_hoi            BigInt   @default(0)
  rank_sieu_hang          Int      @default(0)
  NguHanhSonPoint         Int?     @default(0)
  cap_yari                Int      @default(0)
  data_card               String   @db.Text
  bill_data               String   @db.Text
  data_item_time_sieu_cap String   @default("[0,0,0,0,0]") @db.Text
  vodaisinhtu             String   @default("[]") @db.VarChar(1000)
  bandokhobau             String   @default("[]") @db.VarChar(1000)
  doanhtrai               BigInt   @default(0)
  conduongrandoc          String   @default("[]") @db.VarChar(1000)
  data_achievement        String   @default("[]") @db.Text
  data_luyentap           String   @default("[]") @db.Text
  ruonggo                 String   @default("[]") @db.VarChar(255)
  point_noel              Int      @default(0)
  chottop                 String   @default("[0,0]") @db.VarChar(225)
  dhtime                  String   @default("[0,0,0,0,0,0,0,0,0,0,0,0,0,0]") @db.VarChar(225)
  moc_1                   Int
  moc_2                   Int
  moc_3                   Int
  moc_4                   Int
  account                 account? @relation(fields: [account_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "player_ibfk_1")
}

model post_question {
  question_id BigInt    @id @default(autoincrement())
  title       String    @db.Text
  content     String?   @db.Text
  created     DateTime  @default(now()) @db.Timestamp(0)
  STATUS      Int?      @default(0)
  account_id  Int
  comment     comment[]

  @@index([account_id], map: "FKpijp3eahwssnf3qu27bydj928")
}

model posts {
  id         Int      @id @default(autoincrement())
  tieude     String   @db.VarChar(75)
  noidung    String   @db.Text
  username   String   @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp(0)
  theloai    Int      @default(0)
  ghimbai    Int      @default(0)
  image      String?  @db.VarChar(255)
  trangthai  Int      @default(0)
}

model radar {
  id            Int     @id
  iconId        Int?    @default(0)
  rank          Int?    @default(0) @db.TinyInt
  max           Int?    @default(60)
  type          Int?    @default(0)
  template      Int?    @default(1)
  body          String? @default("[]") @db.VarChar(500)
  name          String? @default("") @db.VarChar(500)
  info          String? @default("") @db.VarChar(2000)
  options       String? @default("[]") @db.VarChar(2000)
  require       Int?    @default(-1)
  require_level Int?    @default(0)
  aura_id       Int?    @default(-1) @db.SmallInt
}

model received_items {
  id                     Int                      @id @default(autoincrement())
  player_name            String                   @db.VarChar(255)
  item_id                Int
  quantity               Int
  received_items_options received_items_options[]
}

model recharge_card {
  recharge_card_id BigInt   @id @default(autoincrement())
  card_detail_id   Int
  account_id       Int
  seri             String?  @db.Text
  CODE             String?  @db.Text
  Created          DateTime @default(now()) @db.Timestamp(0)
  STATUS           Int?     @default(1)
  trans_id         String?  @db.LongText

  @@index([account_id], map: "account_id")
  @@index([card_detail_id], map: "card_detail_id")
}

model shop {
  id           Int          @id @default(autoincrement())
  npc_id       Int
  tag_name     String?      @db.VarChar(50)
  type_shop    Int?
  npc_template npc_template @relation(fields: [npc_id], references: [id], onUpdate: Restrict, map: "shop_ibfk_1")

  @@index([npc_id], map: "npc_id")
}

model shop_ky_gui {
  id         Int    @id
  player_id  Int
  tab        Int
  item_id    Int
  gold       Int
  gem        Int
  quantity   Int
  itemOption String @default("[]") @db.Text
  isUpTop    Int
  isBuy      Int
}

model side_task_template {
  id            Int    @id
  NAME          String @db.VarChar(255)
  max_count_lv1 String @db.VarChar(255)
  max_count_lv2 String @db.VarChar(255)
  max_count_lv3 String @db.VarChar(255)
  max_count_lv4 String @db.VarChar(255)
  max_count_lv5 String @db.VarChar(255)
}

model skill_template {
  nclass_id     Int
  id            Int
  NAME          String @db.VarChar(50)
  max_point     Int    @default(7) @db.SmallInt
  mana_use_type Int    @db.SmallInt
  TYPE          Int    @db.SmallInt
  icon_id       Int
  dam_info      String @db.VarChar(255)
  slot          Int
  skills        String @db.Text

  @@id([nclass_id, id])
}

model small_version {
  id Int @id
  x1 Int
  x2 Int
  x3 Int
  x4 Int
}

model tab_shop {
  id      Int    @id @default(autoincrement())
  shop_id Int
  NAME    String @db.VarChar(50)

  @@index([shop_id], map: "shop_id")
}

model task_main_template {
  id     Int    @id
  NAME   String @db.VarChar(255)
  detail String @db.VarChar(255)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model task_sub_template {
  task_main_id Int
  NAME         String @db.VarChar(255)
  max_count    Int    @default(-1)
  notify       String @default("") @db.VarChar(255)
  npc_id       Int    @default(-1)
  map          Int

  @@index([task_main_id], map: "task_main_id")
  @@ignore
}

model type_item {
  id   Int    @id @default(autoincrement())
  NAME String @default("") @db.VarChar(50)
}

model type_map {
  id   Int    @id
  NAME String @db.VarChar(55)
}

model type_sell_item_shop {
  id   Int    @id @default(autoincrement())
  NAME String @db.VarChar(50)
}

model received_items_options {
  id               Int            @id @default(autoincrement())
  received_item_id Int
  option_id        Int
  option_value     Int
  received_items   received_items @relation(fields: [received_item_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "received_items_options_ibfk_1")

  @@index([received_item_id], map: "received_item_id")
}
