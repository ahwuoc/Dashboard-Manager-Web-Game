// app/actions.ts
"use server"; // D√≤ng n√†y ƒë·∫£m b·∫£o t·∫•t c·∫£ c√°c export trong file n√†y ch·ªâ ch·∫°y tr√™n server

import { RewardItem, ServerRewardItem } from "./types"; // Import t·ª´ file types m·ªõi

// T√πy ch·ªçn: ƒê·ªÉ ƒë·∫£m b·∫£o file n√†y kh√¥ng bao gi·ªù b·ªã bundle v√†o client
import "server-only";

// D·ªØ li·ªáu ph·∫ßn th∆∞·ªüng C√ôNG V·ªöI TR·ªåNG S·ªê (WEIGHTS)
// ƒê√¢y l√† ngu·ªìn duy nh·∫•t, ƒë√°ng tin c·∫≠y cho d·ªØ li·ªáu ph·∫ßn th∆∞·ªüng c·ªßa b·∫°n.
// Tuy·ªát ƒë·ªëi KH√îNG BAO GI·ªú ƒë·ªÉ client g·ª≠i d·ªØ li·ªáu tr·ªçng s·ªë (weight) ho·∫∑c t·ª± x√°c ƒë·ªãnh ph·∫ßn th∆∞·ªüng.
const SERVER_SIDE_WEIGHTED_REWARDS: ServerRewardItem[] = [
  {
    id: 1,
    label: "Th·ªèi v√†ng",
    value: "Random 1-100 th·ªèi",
    color: "#4A90E2",
    icon: "http://103.78.0.42/public/icon/4028.png",
    rarity: "Rare",
    revealed: false,
    weight: 10,
  },
  {
    id: 2,
    label: "B√¥ng Tai C·∫•p 5",
    value: "x1",
    color: "#F5A623",
    icon: "http://103.78.0.42/public/icon/7993.png",
    rarity: "Common",
    revealed: false,
    weight: 50,
  },
  {
    id: 3,
    label: "C·∫£i Trang Mega Broly",
    value: "x1",
    color: "#D0021B",
    icon: "http://103.78.0.42/public/icon/17548.png",
    rarity: "Epic",
    revealed: false,
    weight: 8,
  },
  {
    id: 4,
    label: "C·∫£m ∆°n b·∫°n ƒë√£ tham gia",
    value: "C·∫£m ∆°n",
    color: "#7ED321",
    icon: "üéâ",
    rarity: "Common",
    revealed: false,
    weight: 60,
  },
  {
    id: 5,
    label: "V√°n bay M√¢y M∆∞a",
    value: "x1",
    color: "#50E3C2",
    icon: "http://103.78.0.42/public/icon/18067.png",
    rarity: "Uncommon",
    revealed: false,
    weight: 20,
  },
  {
    id: 6,
    label: "C·∫£i trang Goku Rose VIP",
    value: "x1",
    color: "#F8E71C",
    icon: "http://103.78.0.42/public/icon/18044.png",
    rarity: "Legendary",
    revealed: false,
    weight: 2,
  },
  {
    id: 7,
    label: "ƒê√° Qu√Ω Huy·ªÅn Tho·∫°i",
    value: "x1",
    color: "#9013FE",
    icon: "üî•",
    rarity: "Mythic",
    revealed: false,
    weight: 1,
  },
  {
    id: 8,
    label: "Danh Hi·ªáu Tr√πm SƒÉn Boss",
    value: "x1",
    color: "#FF6B35",
    icon: "http://103.78.0.42/public/icon/18248.png",
    rarity: "Rare",
    revealed: false,
    weight: 15,
  },
];

/**
 * L·ª±a ch·ªçn m·ªôt ph·∫ßn th∆∞·ªüng d·ª±a tr√™n tr·ªçng s·ªë ƒë√£ ƒë·ªãnh nghƒ©a.
 * @returns {RewardItem} Ph·∫ßn th∆∞·ªüng th·∫Øng cu·ªôc.
 * @throws {Error} N·∫øu kh√¥ng c√≥ ph·∫ßn th∆∞·ªüng n√†o ƒë·ªÉ quay.
 */
function selectWeightedReward(): RewardItem {
  const prizePool = SERVER_SIDE_WEIGHTED_REWARDS;

  if (prizePool.length === 0) {
    throw new Error("Kh√¥ng c√≥ ph·∫ßn th∆∞·ªüng n√†o ƒë·ªÉ quay.");
  }

  const totalWeight = prizePool.reduce((sum, item) => sum + item.weight, 0);
  const randomNumber = Math.random() * totalWeight;

  let winningItem: ServerRewardItem | undefined;
  let currentWeight = 0;

  for (const item of prizePool) {
    currentWeight += item.weight;
    if (randomNumber < currentWeight) {
      winningItem = item;
      break;
    }
  }

  // Fallback an to√†n n·∫øu c√≥ l·ªói trong logic tr·ªçng s·ªë (th∆∞·ªùng kh√¥ng x·∫£y ra)
  if (!winningItem) {
    console.warn("Weighted selection failed, falling back to random pick.");
    winningItem = prizePool[Math.floor(Math.random() * prizePool.length)];
  }

  // Tr·∫£ v·ªÅ RewardItem chu·∫©n (kh√¥ng c√≥ weight) cho client
  const { weight, ...clientRewardItem } = winningItem;
  return clientRewardItem;
}

/**
 * Server Action ƒë·ªÉ x·ª≠ l√Ω vi·ªác quay th∆∞·ªüng.
 * Th·ª±c hi·ªán logic nghi·ªáp v·ª•, ch·ªçn ph·∫ßn th∆∞·ªüng v√† m√¥ ph·ªèng l∆∞u l·ªãch s·ª≠.
 * @returns {Promise<{ success: boolean; winner?: RewardItem; error?: string; }>} K·∫øt qu·∫£ quay th∆∞·ªüng.
 */
export async function spinWheelAction(): Promise<{
  success: boolean;
  winner?: RewardItem;
  error?: string;
}> {
  // --- VI·∫æT LOGIC X√ÅC TH·ª∞C V√Ä T∆Ø∆†NG T√ÅC DB T·∫†I ƒê√ÇY ---
  // V√≠ d·ª•:
  // const session = await getSession(); // L·∫•y session ng∆∞·ªùi d√πng
  // if (!session?.user) {
  //   return { success: false, error: "B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ quay th∆∞·ªüng." };
  // }
  //
  // const user = await getUserData(session.user.id); // L·∫•y th√¥ng tin user t·ª´ DB
  // if (user.spinsRemaining <= 0) {
  //   return { success: false, error: "B·∫°n ƒë√£ h·∫øt l∆∞·ª£t quay!" };
  // }
  //
  // await decrementUserSpinCount(user.id); // Gi·∫£m s·ªë l∆∞·ª£t quay c·ªßa user trong DB
  // --- K·∫æT TH√öC LOGIC X√ÅC TH·ª∞C V√Ä T∆Ø∆†NG T√ÅC DB ---

  try {
    const winningItem = selectWeightedReward();

    // M√¥ ph·ªèng ƒë·ªô tr·ªÖ m·∫°ng ƒë·ªÉ th·∫•y hi·ªáu ·ª©ng t·∫£i
    await new Promise((resolve) => setTimeout(resolve, 1500));

    // ·ªû ƒë√¢y b·∫°n c√≥ th·ªÉ l∆∞u winningItem v√†o database l·ªãch s·ª≠ c·ªßa ng∆∞·ªùi d√πng
    // await saveSpinResultToDatabase(session.user.id, winningItem);

    return { success: true, winner: winningItem };
  } catch (error) {
    console.error("L·ªói khi x·ª≠ l√Ω quay th∆∞·ªüng:", error);
    // X·ª≠ l√Ω l·ªói c·ª• th·ªÉ (v√≠ d·ª•: database down, logic ch·ªçn ph·∫ßn th∆∞·ªüng l·ªói)
    return { success: false, error: "ƒê√£ x·∫£y ra l·ªói h·ªá th·ªëng khi quay th∆∞·ªüng." };
  }
}

/**
 * Server Action ƒë·ªÉ l·∫•y l·ªãch s·ª≠ quay th∆∞·ªüng c·ªßa ng∆∞·ªùi d√πng.
 * @returns {Promise<RewardItem[]>} Danh s√°ch c√°c ph·∫ßn th∆∞·ªüng ƒë√£ quay.
 */
export async function getSpinHistoryAction(): Promise<RewardItem[]> {
  // --- VI·∫æT LOGIC X√ÅC TH·ª∞C V√Ä L·∫§Y L·ªäCH S·ª¨ T·ª™ DB T·∫†I ƒê√ÇY ---
  // V√≠ d·ª•:
  // const session = await getSession();
  // if (!session?.user) {
  //   return [];
  // }
  // const history = await loadUserSpinHistoryFromDatabase(session.user.id);
  // return history.map(item => ({ ...item, revealed: false })); // ƒê·∫£m b·∫£o format ph√π h·ª£p cho client
  // --- K·∫æT TH√öC LOGIC X√ÅC TH·ª∞C V√Ä L·∫§Y L·ªäCH S·ª¨ T·ª™ DB ---

  // T·∫°m th·ªùi tr·∫£ v·ªÅ m·∫£ng r·ªóng ƒë·ªÉ minh h·ªça
  // Trong ·ª©ng d·ª•ng th·ª±c t·∫ø, b·∫°n s·∫Ω l·∫•y t·ª´ DB.
  // V√≠ d·ª•: return [{ id: 1, label: "Th·ªèi v√†ng", value: "Random 1-100 th·ªèi", color: "#4A90E2", icon: "http://103.78.0.42/public/icon/4028.png", rarity: "Rare", revealed: false }];
  return [];
}
